{
  "swagger": "2.0",
  "info": {
    "title": "Ifeelgoods Fulfillment API",
    "description": "Get started delivering Rewards using the Ifeelgoods Platform Fulfillment API",
    "version": "2.1.0",
    "contact": {
      "name": "API Support",
      "url": "http://www.ifeelgoods.com/contact",
      "email": "apisupport@ifeelgoods.com"
    }
  },
  "host": "api.ifeelgoods.com",
  "basePath": "/fulfillment/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Account",
      "description": "An __Account__ allows you to access the Ifeelgoods API. Permissions are granted based on your roles."
    },
    {
      "name": "Reward",
      "description": "A __Reward__ (aka Product SKU) is a specific denomination of a Digital or Physical Gift that can be delivered to a User. \"iTunes Code 10$ (US)\" is a Reward."
    },
    {
      "name": "Client",
      "description": "A __Client__ represents a customer account that will be either retrieving or delivering __Rewards__ to end users. Inventory and Budget are set at the Client level, however one Client can run several different __Promotions__."
    },
    {
      "name": "Promotion",
      "description": "A __Promotion__ represents the settings of a campaign in which a __Client__ distributes their __Rewards__ to the end-users."
    },
    {
      "name": "Redemption",
      "description": "A __Redemption__ defines the status of a __Reward__ delivery (user eligibility, reward selected, authentication settings, notification channels..)"
    },
    {
      "name": "Stats",
      "description": "Retrieve data relative to Rewards Delivery activity through the Ifeelgoods Platform"
    }
  ],
  "parameters": {
    "Api-Key": {
      "name": "Api-Key",
      "in": "header",
      "description": "You API Secret",
      "required": true,
      "type": "string"
    },
    "RewardSku": {
      "name": "reward_sku",
      "in": "path",
      "description": "Unique Reward identifier (SKU)",
      "required": true,
      "type": "string"
    },
    "ClientId": {
      "name": "client_id",
      "in": "path",
      "description": "Unique Client identifier",
      "required": true,
      "type": "integer",
      "format": "int32"
    },
    "PromotionId": {
      "name": "promotion_id",
      "in": "path",
      "description": "Unique Promotion identifier",
      "required": true,
      "type": "integer",
      "format": "int32"
    },
    "RedemptionId": {
      "name": "redemption_id",
      "in": "path",
      "description": "Unique Promotion identifier",
      "required": true,
      "type": "integer",
      "format": "int32"
    }
  },
  "paths": {
    "/accounts/me": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Show current Account",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Account"
          }
        }
      }
    },
    "/rewards": {
      "get": {
        "tags": [
          "Reward"
        ],
        "summary": "List Rewards",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RewardsList"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          }
        }
      }
    },
    "/rewards/{reward_sku}": {
      "get": {
        "tags": [
          "Reward"
        ],
        "summary": "Show specific Reward",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/RewardSku"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Reward"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/responses/ErrorNotFound"
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "List Clients",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ClientsList"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          }
        }
      }
    },
    "/clients/{client_id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Show specific Client",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/ClientId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Client"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/responses/ErrorNotFound"
          }
        }
      }
    },
    "/clients/{client_id}/promotions": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "List Promotions",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/ClientId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PromotionsList"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          }
        }
      }
    },
    "/promotions/{promotion_id}": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "Show specific Promotion",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/PromotionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Promotion"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/responses/ErrorNotFound"
          }
        }
      }
    },
    "/promotions/{promotion_id}/redemptions": {
      "get": {
        "tags": [
          "Redemption"
        ],
        "summary": "List Redemptions",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/PromotionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RedemptionsList"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Redemption"
        ],
        "summary": "Create or Find a Redemption",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/PromotionId"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Redemption"
          },
          "201": {
            "$ref": "#/responses/RedemptionCreated"
          }
        }
      }
    },
    "/redemptions/{redemption_id}": {
      "get": {
        "tags": [
          "Redemption"
        ],
        "summary": "Show specific Redemption",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/RedemptionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Redemption"
          },
          "401": {
            "$ref": "#/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/responses/ErrorNotFound"
          }
        }
      }
    },
    "/promotions/{promotion_id}/rewards/{reward_sku}/redemptions": {
      "get": {
        "tags": [
          "Redemption"
        ],
        "summary": "List Redemptions for a given Reward",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/PromotionId"
          },
          {
            "$ref": "#/parameters/RewardSku"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RedemptionsList"
          }
        }
      },
      "post": {
        "tags": [
          "Redemption"
        ],
        "summary": "Create or Find a Redemption for a given Reward",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/PromotionId"
          },
          {
            "$ref": "#/parameters/RewardSku"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Redemption"
          },
          "201": {
            "$ref": "#/responses/RedemptionCreated"
          }
        }
      }
    },
    "/promotions/{promotion_id}/rewards/{reward_sku}/redemptions/actions/redeem": {
      "post": {
        "tags": [
          "Redemption"
        ],
        "summary": "Redeem or Find a Redemption for a given Reward",
        "parameters": [
          {
            "$ref": "#/parameters/Api-Key"
          },
          {
            "$ref": "#/parameters/PromotionId"
          },
          {
            "$ref": "#/parameters/RewardSku"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "order_id": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Redemption"
          },
          "201": {
            "$ref": "#/responses/RedemptionCreated"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "description": "An __Account__ allows you to access the Ifeelgoods API. Permissions are granted based on your roles.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 170
        },
        "login": {
          "type": "string",
          "example": "jdoe"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john.doe@gmail.com"
        },
        "phone_number": {
          "type": "string",
          "example": 11234567890
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "fulfillment_api"
          }
        },
        "timezone": {
          "type": "string",
          "example": "America/Los_Angeles"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "access_type": {
          "type": "string",
          "example": "service"
        }
      }
    },
    "Reward": {
      "description": "A __Reward__ (aka Product SKU) is a specific denomination of a Digital or Physical Gift that can be delivered to a User. \"iTunes Code 10$ (US)\" is a Reward.",
      "type": "object",
      "properties": {
        "sku": {
          "type": "string",
          "example": "APP-ITC-10USD-US"
        },
        "denomination": {
          "type": "string",
          "example": "$10"
        },
        "name": {
          "type": "string",
          "example": "$10 iTunes® Code"
        },
        "cost": {
          "type": "string",
          "example": 10
        },
        "cost_currency": {
          "type": "string",
          "example": "USD"
        },
        "face_value": {
          "type": "string",
          "example": 10
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "Games & Entertainment",
            "Sports",
            "Shopping"
          ]
        },
        "country": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "US"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "featured"
          ]
        },
        "targeting": {
          "type": "object",
          "properties": {
            "gender": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "male",
                "female"
              ]
            },
            "age_range": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "18-24",
                "25-34"
              ]
            },
            "reach": {
              "type": "string",
              "example": "500 Millions App Store Account"
            }
          }
        },
        "catalog_badge_url": {
          "type": "string",
          "format": "url",
          "example": "//cdn.ifeelgoods.com/media/a308a55a5b865ca43d4eda67dffa188a/b62a6cd46a327bfcfba41a4bed2083d7.png/raw.png"
        },
        "catalog_card_url": {
          "type": "string",
          "format": "url",
          "example": "//cdn.ifeelgoods.com/media/a308a55a5b865ca43d4eda67dffa188a/b62a6cd46a327bfcfba41a4bed2083d7.png/raw.png"
        },
        "logo_url": {
          "type": "string",
          "format": "url",
          "example": "//cdn.ifeelgoods.com/media/a308a55a5b865ca43d4eda67dffa188a/3d8028726d101e970e7f3b49e178ca85.png/raw.png"
        },
        "description": {
          "type": "string",
          "example": "iTunes Gift Cards are the perfect way to give the gift of entertainment! <br><br> Reward your customers with iTunes Gift Codes, which allow users to shop for everything in the iTunes Store : music, movies, TV shows, apps, books, and more ! <br><br> Get the most of your ad dollars by using official iTunes creative and benefit from Apple’s great brand awareness!"
        },
        "terms_and_conditions_url": {
          "type": "string",
          "format": "url",
          "example": "http://www.apple.com/legal/internet-services/itunes/us/terms.html#GIFTS"
        },
        "terms_and_conditions": {
          "type": "string",
          "example": "Valid only on iTunes Store for U.S. Requires iTunes account and prior acceptance of license and usage terms. (...)"
        }
      }
    },
    "Client": {
      "description": "A __Client__ represents a customer account that will be either retrieving or delivering __Rewards__ to end users. Inventory and Budget are set at the Client level, however one Client can run several different __Promotions__.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 237
        },
        "ui_id": {
          "type": "string",
          "example": "ifeelgoods-inc"
        },
        "name": {
          "type": "string",
          "example": "Ifeelgoods, Inc."
        },
        "state": {
          "type": "string",
          "example": "active"
        },
        "billing_location": {
          "type": "string",
          "example": "US"
        },
        "billing_currency": {
          "type": "string",
          "example": "USD"
        },
        "contact_email": {
          "type": "string",
          "format": "email",
          "example": "joe@ifeelgoods.com"
        },
        "contact_phone": {
          "type": "string",
          "example": 11234567890
        },
        "website": {
          "type": "string",
          "format": "url",
          "example": "http://www.ifeelgoods.com"
        },
        "operating_countries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "CA",
            "JP",
            "US"
          ]
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "logo_url": {
          "type": "string",
          "format": "url",
          "example": "//cdn.ifeelgoods.com/media/a308a55a5b865ca43d4eda67dffa188a/e90ddb6726bdb9171badc3d90097746a.png/raw.png"
        },
        "promotions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 115
              },
              "name": {
                "type": "string",
                "example": "Christmas gifts delivery"
              }
            }
          }
        }
      }
    },
    "Promotion": {
      "description": "A __Promotion__ represents the settings of a campaign in which a __Client__ distributes their __Rewards__ to the end-users.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 944
        },
        "ui_id": {
          "type": "string",
          "example": "christmas-gifts"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "name": {
          "type": "string",
          "example": "Christmas gifts delivery"
        },
        "start_datetime": {
          "type": "string",
          "format": "date-time",
          "example": "2017-12-25T00:00:00.000Z"
        },
        "end_datetime": {
          "type": "string",
          "format": "date-time",
          "example": "2017-12-25T23:59:59.000Z"
        },
        "client": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32",
              "example": 237
            },
            "name": {
              "type": "string",
              "example": "Ifeelgoods, Inc."
            }
          }
        },
        "status": {
          "type": "string",
          "example": "ready"
        },
        "state": {
          "type": "string",
          "example": "pending"
        },
        "rewards": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sku": {
                "type": "string",
                "example": "APP-ITC-10USD-US"
              },
              "name": {
                "type": "string",
                "example": "$10 iTunes® Code"
              },
              "state": {
                "type": "string",
                "example": "ready"
              },
              "status": {
                "type": "string",
                "example": "enabled"
              }
            }
          }
        },
        "fraud_level": {
          "type": "string",
          "example": "standard"
        },
        "redeem_frequency": {
          "type": "string",
          "example": "multiple"
        },
        "authentication_systems": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "email"
          ]
        },
        "secured_order_ids": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Redemption": {
      "description": "A __Redemption__ defines the status of a __Reward__ delivery (user eligibility, reward selected, authentication settings, notification channels..)",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "example": 56
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "example": "james.brown@example.com"
        },
        "phone_number": {
          "type": "string",
          "example": 16502899294
        },
        "first_name": {
          "type": "string",
          "example": "James"
        },
        "last_name": {
          "type": "string",
          "example": "Brown"
        },
        "address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "line_1": {
          "type": "string",
          "example": "550 Hamilton Avenue"
        },
        "line_2": {
          "type": "string",
          "example": "Suite 226"
        },
        "line_3": {
          "type": "string"
        },
        "line_4": {
          "type": "string"
        },
        "zipcode": {
          "type": "string",
          "example": 94301
        },
        "city": {
          "type": "string",
          "example": "Palo Alto"
        },
        "state": {
          "type": "string",
          "example": "California"
        },
        "country": {
          "type": "string",
          "example": "US"
        }
      }
    },
    "Paging": {
      "description": "Pagination current state (current page number, number of items per page and total)",
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "per_page": {
          "type": "integer",
          "format": "int32",
          "example": 20
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "example": 186
        }
      }
    }
  },
  "responses": {
    "ErrorUnauthorized": {
      "description": "Unauthorized",
      "schema": {
        "type": "object",
        "properties": {
          "error_name": {
            "type": "string",
            "example": "unauthorized"
          },
          "error_message": {
            "type": "string",
            "example": "You need to be signed-in to perform this action."
          }
        }
      }
    },
    "ErrorForbidden": {
      "description": "Forbidden",
      "schema": {
        "type": "object",
        "properties": {
          "error_name": {
            "type": "string",
            "example": "forbidden"
          },
          "error_message": {
            "type": "string",
            "example": "You are not allowed to perform this action."
          }
        }
      }
    },
    "ErrorNotFound": {
      "description": "Not Found",
      "schema": {
        "type": "object",
        "properties": {
          "error_name": {
            "type": "string",
            "example": "not_found"
          },
          "error_message": {
            "type": "string",
            "example": "The resource or action does not exist."
          }
        }
      }
    },
    "Account": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "Reward": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Reward"
          }
        }
      }
    },
    "RewardsList": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Reward"
            }
          },
          "paging": {
            "$ref": "#/definitions/Paging"
          }
        }
      }
    },
    "Client": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Client"
          }
        }
      }
    },
    "ClientsList": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Client"
            }
          },
          "paging": {
            "$ref": "#/definitions/Paging"
          }
        }
      }
    },
    "Promotion": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Promotion"
          }
        }
      }
    },
    "PromotionsList": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Promotion"
            }
          },
          "paging": {
            "$ref": "#/definitions/Paging"
          }
        }
      }
    },
    "Redemption": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Redemption"
          }
        }
      }
    },
    "RedemptionCreated": {
      "description": "Created",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/Redemption"
          }
        }
      }
    },
    "RedemptionsList": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Redemption"
            }
          },
          "paging": {
            "$ref": "#/definitions/Paging"
          }
        }
      }
    }
  }
}
